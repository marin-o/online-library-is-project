public FileContentResult CreateInvoice(string id)
{
    HttpClient client = new HttpClient();

    string URL = "https://bookstoreweb20240912205458.azurewebsites.net/api/Admin/GetDetails";
    var model = new
    {
        Id = id
    };

    HttpContent content = new StringContent(JsonConvert.SerializeObject(model), Encoding.UTF8, "application/json");

    HttpResponseMessage response = client.PostAsync(URL, content).Result;

    var result = response.Content.ReadAsAsync<Order>().Result;

    var assembly = Assembly.GetExecutingAssembly();
    var resource = "AdminApplication.Invoice.docx";

    using (var stream = assembly.GetManifestResourceStream(resource)){
        var document = DocumentModel.Load(stream, GemBox.Document.LoadOptions.DocxDefault);

        document.Content.Replace("{{OrderNumber}}", result.Id.ToString());
        document.Content.Replace("{{UserName}}", result.User.UserName);

        StringBuilder sb = new StringBuilder();

        var total = 0.0;
        foreach (var item in result.BooksInOrder)
        {
            sb.AppendLine("Book " + item.Book.Title + " has quantity " + item.Quantity + " with price " + item.Book.Price);
            total += (item.Quantity * item.Book.Price);
        }
        document.Content.Replace("{{BookList}}", sb.ToString());
        document.Content.Replace("{{TotalPrice}}", total.ToString() + "$");

        var strm = new MemoryStream();
        document.Save(strm, new PdfSaveOptions());
        return File(strm.ToArray(), new PdfSaveOptions().ContentType, "ExportInvoice.pdf");
    }

    
    

}